// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Event {
  id        String   @id @default(uuid())
  name      String
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  price     Float
  spots     Spot[]
}

model Spot {
  id                 String               @id @default(uuid())
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  name               String
  status             Status
  event              Event                @relation(fields: [eventId], references: [id])
  eventId            String
  reservationHistory ReservationHistory[]
  ticket             Ticket?
}

model ReservationHistory {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String
  spot      Spot     @relation(fields: [spotId], references: [id], onDelete: Cascade)
  spotId    String
}

model Ticket {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String
  spot      Spot     @relation(fields: [spotId], references: [id], onDelete: Cascade)
  spotId    String   @unique
}

enum Status {
  AVAILABLE
  OCUPIED
}
